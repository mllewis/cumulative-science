[{"authors":null,"categories":null,"content":"I have included a bunch of extra resources and guides related to graphic design, visualization, R, data, and other relevant topics. Enjoy!\n","date":1588291200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1588291200,"objectID":"e5656835a9d5f0c69a44e56dc2b58101","permalink":"https://cumulativescience.netlify.app/resource/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/","section":"resource","summary":"I have included a bunch of extra resources and guides related to graphic design, visualization, R, data, and other relevant topics. Enjoy!","tags":null,"title":"Helpful resources","type":"docs"},{"authors":null,"categories":null,"content":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.\nRStudio.cloud R is free, but it can sometimes be a pain to install and configure. To make life easier, you can (and should!) use the free RStudio.cloud service initially, which lets you run a full instance of RStudio in your web browser. This means you won\u0026rsquo;t have to install anything on your computer to get started with R! We will have a shared class workspace in RStudio.cloud that will let you quickly copy templates for labs and problem sets.\nGo to https://rstudio.cloud/ and create an account. You\u0026rsquo;ll receive a link to join the shared class workspace separately. If you don\u0026rsquo;t get this link, let me know and I will invite you.\nRStudio on your computer RStudio.cloud is convenient, but it can be slow and it is not designed to be able to handle larger datasets, more complicated analysis, or fancier graphics. Over the course of the semester, you should wean yourself off of RStudio.cloud and install all these things locally. This is also important if you want to customize fonts, since RStudio.cloud has extremely limited support for fonts other than Helvetica.\nHere\u0026rsquo;s how you install all these things\nInstall R First you need to install R itself (the engine).\n  Go to the CRAN (Collective R Archive Network)1 website: https://cran.r-project.org/\n  Click on \u0026ldquo;Download R for XXX\u0026rdquo;, where XXX is either Mac or Windows:\n  If you use macOS, scroll down to the first .pkg file in the list of files (in this picture, it\u0026rsquo;s R-4.0.0.pkg; as of right now, the current version is also 4.0.0) and download it.\n  If you use Windows, click \u0026ldquo;base\u0026rdquo; (or click on the bolded \u0026ldquo;install R for the first time\u0026rdquo; link) and download it.\n    Double click on the downloaded file (check your Downloads folder). Click yes through all the prompts to install like any other program.\n  If you use macOS, download and install XQuartz. You do not need to do this on Windows.\n  Install RStudio Next, you need to install RStudio, the nicer graphical user interface (GUI) for R (the dashboard). Once R and RStudio are both installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won\u0026rsquo;t ever have to interact with it directly.\n  Go to the free download location on RStudio\u0026rsquo;s website: https://www.rstudio.com/products/rstudio/download/#download\n  The website should automatically detect your operating system (macOS or Windows) and show a big download button for it:\nIf not, scroll down a little to the large table and choose the version of RStudio that matches your operating system.\n  Double click on the downloaded file (again, check your Downloads folder). Click yes through all the prompts to install like any other program.\n  Double click on RStudio to run it (check your applications folder or start menu).\nInstall tidyverse R packages are easy to install with RStudio. Select the packages panel, click on \u0026ldquo;Install,\u0026rdquo; type the name of the package you want to install, and press enter.\nThis can sometimes be tedious when you\u0026rsquo;re installing lots of packages, though. The tidyverse, for instance, consists of dozens of packages (including ggplot2) that all work together. Rather than install each individually, you can install a single magical package and get them all at the same time.\nGo to the packages panel in RStudio, click on \u0026ldquo;Install,\u0026rdquo; type \u0026ldquo;tidyverse\u0026rdquo;, and press enter. You\u0026rsquo;ll see a bunch of output in the RStudio console as all the tidyverse packages are installed.\nNotice also that RStudio will generate a line of code for you and run it: install.packages(\u0026quot;tidyverse\u0026quot;). You can also just paste and run this instead of using the packages panel.\nInstall tinytex When you knit to PDF, R uses a special scientific typesetting program named LaTeX (pronounced \u0026ldquo;lay-tek\u0026rdquo; or \u0026ldquo;lah-tex\u0026rdquo;; for goofy nerdy reasons, the x is technically the \u0026ldquo;ch\u0026rdquo; sound in \u0026ldquo;Bach\u0026rdquo;, but most people just say it as \u0026ldquo;k\u0026rdquo;—saying \u0026ldquo;layteks\u0026rdquo; is frowned on for whatever reason).\nLaTeX is neat and makes pretty documents, but it\u0026rsquo;s a huge program—the macOS version, for instance, is nearly 4 GB! To make life easier, there\u0026rsquo;s an R package named tinytex that installs a minimal LaTeX program and that automatically deals with differences between macOS and Windows.\nHere\u0026rsquo;s how to install tinytex so you can knit to pretty PDFs:\n Use the Packages in panel in RStudio to install tinytex like you did above with tidyverse. Alternatively, run install.packages(\u0026quot;tinytex\u0026quot;) in the console. Run tinytex::install_tinytex() in the console. Wait for a bit while R downloads and installs everything you need. The end! You should now be able to knit to PDF.    It\u0026rsquo;s a goofy name, but CRAN is where most R packages—and R itself—lives. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"c5e6c5f0d0baae071e282245bbba803c","permalink":"https://cumulativescience.netlify.app/resource/install/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/resource/install/","section":"resource","summary":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.","tags":null,"title":"Installing R, RStudio, tidyverse, and tinytex","type":"docs"},{"authors":null,"categories":null,"content":"R Markdown is regular Markdown with R code and output sprinkled in. You can do everything you can with regular Markdown, but you can incorporate graphs, tables, and other R output directly in your document. You can create HTML, PDF, and Word documents, PowerPoint and HTML presentations, websites, books, and even interactive dashboards with R Markdown. This whole course website is created with R Markdown (and a package named blogdown).\nThe documentation for R Markdown is extremely comprehensive, and their tutorials and cheatsheets are excellent—rely on those.\nHere are the most important things you\u0026rsquo;ll need to know about R Markdown in this class:\nKey terms   Document: A Markdown file where you type stuff\n  Chunk: A piece of R code that is included in your document. It looks like this:\n```{r} # Code goes here ``` There must be an empty line before and after the chunk. The final three backticks must be the only thing on the line—if you add more text, or if you forget to add the backticks, or accidentally delete the backticks, your document will not knit correctly.\n  Knit: When you \u0026ldquo;knit\u0026rdquo; a document, R runs each of the chunks sequentially and converts the output of each chunk into Markdown. R then runs the knitted document through pandoc to convert it to HTML or PDF or Word (or whatever output you\u0026rsquo;ve selected).\nYou can knit by clicking on the \u0026ldquo;Knit\u0026rdquo; button at the top of the editor window, or by pressing ⌘⇧K on macOS or control + shift + K on Windows.\n  Add chunks There are three ways to insert chunks:\n  Press ⌘⌥I on macOS or control + alt + I on Windows\n  Click on the \u0026ldquo;Insert\u0026rdquo; button at the top of the editor window\n  Manually type all the backticks and curly braces (don\u0026rsquo;t do this)\n  Chunk names You can add names to chunks to make it easier to navigate your document. If you click on the little dropdown menu at the bottom of your editor in RStudio, you can see a table of contents that shows all the headings and chunks. If you name chunks, they\u0026rsquo;ll appear in the list. If you don\u0026rsquo;t include a name, the chunk will still show up, but you won\u0026rsquo;t know what it does.\nTo add a name, include it immediately after the {r in the first line of the chunk. Names cannot contain spaces, but they can contain underscores and dashes. All chunk names in your document must be unique.\n```{r name-of-this-chunk} # Code goes here ``` Chunk options There are a bunch of different options you can set for each chunk. You can see a complete list in the RMarkdown Reference Guide or at knitr\u0026rsquo;s website.\nOptions go inside the {r} section of the chunk:\n```{r name-of-this-chunk, warning=FALSE, message=FALSE} # Code goes here ``` The most common chunk options are these:\n fig.width=5 and fig.height=3 (or whatever number you want): Set the dimensions for figures echo=FALSE: The code is not shown in the final document, but the results are message=FALSE: Any messages that R generates (like all the notes that appear after you load a package) are omitted warning=FALSE: Any warnings that R generates are omitted include=FALSE: The chunk still runs, but the code and results are not included in the final document  You can also set chunk options by clicking on the little gear icon in the top right corner of any chunk:\nInline chunks You can also include R output directly in your text, which is really helpful if you want to report numbers from your analysis. To do this, use `r r_code_here`.\nIt\u0026rsquo;s generally easiest to calculate numbers in a regular chunk beforehand and then use an inline chunk to display the value in your text. For instance, this document…\n```{r find-avg-mpg, echo=FALSE} avg_mpg \u0026lt;- mean(mtcars$mpg) ``` The average fuel efficiency for cars from 1974 was `r round(avg_mpg, 1)` miles per gallon. … would knit into this:\n The average fuel efficiency for cars from 1974 was 20.1 miles per gallon.\n Output formats You can specify what kind of document you create when you knit in the YAML front matter.\ntitle: \u0026#34;My document\u0026#34; output: html_document: default pdf_document: default word_document: default You can also click on the down arrow on the \u0026ldquo;Knit\u0026rdquo; button to choose the output and generate the appropriate YAML. If you click on the gear icon next to the \u0026ldquo;Knit\u0026rdquo; button and choose \u0026ldquo;Output options\u0026rdquo;, you change settings for each specific output type, like default figure dimensions or whether or not a table of contents is included.\nThe first output type listed under output: will be what is generated when you click on the \u0026ldquo;Knit\u0026rdquo; button or press the keyboard shortcut (⌘⇧K on macOS; control + shift + K on Windows). If you choose a different output with the \u0026ldquo;Knit\u0026rdquo; button menu, that output will be moved to the top of the output section.\nThe indentation of the YAML section matters, especially when you have settings nested under each output type. Here\u0026rsquo;s what a typical output section might look like:\n--- title: \u0026#34;My document\u0026#34; author: \u0026#34;My name\u0026#34; date: \u0026#34;January 13, 2020\u0026#34; output: html_document: toc: yes fig_caption: yes fig_height: 8 fig_width: 10 pdf_document: latex_engine: xelatex  # More modern PDF typesetting engine toc: yes word_document: toc: yes fig_caption: yes fig_height: 4 fig_width: 5 --- ","date":1578873600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578873600,"objectID":"4c95f77a8fb69d2c5ee2e6b67bcae08b","permalink":"https://cumulativescience.netlify.app/resource/rmarkdown/","publishdate":"2020-01-13T00:00:00Z","relpermalink":"/resource/rmarkdown/","section":"resource","summary":"R Markdown is regular Markdown with R code and output sprinkled in. You can do everything you can with regular Markdown, but you can incorporate graphs, tables, and other R output directly in your document.","tags":null,"title":"Using R Markdown","type":"docs"},{"authors":null,"categories":null,"content":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.\nSearching for help with R on Google can sometimes be tricky because the program name is a single letter. Google is generally smart enough to figure out what you mean when you search for \u0026ldquo;r scatterplot\u0026rdquo;, but if it does struggle, try searching for \u0026ldquo;rstats\u0026rdquo; instead (e.g. \u0026ldquo;rstats scatterplot\u0026rdquo;). Also, since most of your R work in this class will deal with ggplot2, it\u0026rsquo;s often easier to just search for that instead of the letter \u0026ldquo;r\u0026rdquo; (e.g. \u0026ldquo;ggplot scatterplot\u0026rdquo;).\nIf you use Twitter, post R-related questions and content with #rstats. The community there is exceptionally generous and helpful. Also check out StackOverflow (a Q\u0026amp;A site with hundreds of thousands of answers to all sorts of programming questions) and RStudio Community (a forum specifically designed for people using RStudio and the tidyverse (i.e. you)).\nThese resources are also really really helpful:\n R for Data Science: A free online book for learning the basics of R and the tidyverse. R and RStudio cheat sheets: A large collection of simple cheat sheets for RStudio, ggplot2, and other R-related things. Stat 545: Dr. Jenny Bryan at RStudio has an entire introductory course in R, visualization, and data analysis online. STA 112FS: Data Science: Dr. Mine Çetinkaya-Rundel at the University of Edinburgh / Duke University has an entire introductory course in R, visualization, and data science online. CSE 631: Principles \u0026amp; Practice of Data Visualization: Yet another introductory course for R and ggplot2 by Dr. Alison Presmanes Hill at RStudio.  R in the wild A popular (and increasingly standard) way for sharing your analyses and visualizations is to post an annotated explanation of your process somewhere online. RStudio allows you to publish knitted HTML files directly to RPubs, but you can also post your output to a blog or other type of website.1 Reading these kinds of posts is one of the best ways to learn R, since they walk you through each step of the process and show the code and output.\nHere are some of the best examples I\u0026rsquo;ve come across:\n Text analysis of Trump\u0026rsquo;s tweets confirms he writes only the (angrier) Android half (with a follow-up) Bob Ross - Joy of Painting Bechdel analysis using the tidyverse: There are also a bunch of other examples using data from FiveThirtyEight. Sexism on the Silver Screen: Exploring film\u0026rsquo;s gender divide Comparison of Quentin Tarantino Movies by Box Office and the Bechdel Test Who came to vote in Utah\u0026rsquo;s caucuses? Health care indicators in Utah counties Song lyrics across the United States A decade (ish) of listening to Sigur Rós When is Tom peeping these days?: There are a also bunch of final projects from other R and data visualization classes here and here. Mapping Fall Foliage General (Attys) Distributions Disproving Approval    If you want to be really fancy, you can use blogdown, which makes a complete website with R Markdown files. That\u0026rsquo;s actually how this site is built (see the source code). You can build your own site with this tutorial. \u0026#x21a9;\u0026#xfe0e;\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"fd33fdc527a88c760dba0f467bb3657d","permalink":"https://cumulativescience.netlify.app/resource/r/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/r/","section":"resource","summary":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.","tags":null,"title":"R","type":"docs"},{"authors":null,"categories":null,"content":"R style conventions R is fairly forgiving about how you type code (unlike other languages like Python, where miscounting spaces can ruin your code!). All of these things will do exactly the same thing:\nmpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty\u0026gt;10, class==\u0026#34;compact\u0026#34;) filter(mpg,cty\u0026gt;10,class==\u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) filter ( mpg,cty\u0026gt;10, class==\u0026#34;compact\u0026#34; ) But you\u0026rsquo;ll notice that only a few of those iterations (the first three) are easily readable.\nTo help improve readability and make it easier to share code with others, there\u0026rsquo;s an unofficial style guide for writing R code. It\u0026rsquo;s fairly short and just has lots of examples of good and bad ways of writing code (naming variables, dealing with long lines, using proper indentation levels, etc.)—you should glance through it some time.\nRStudio has a built-in way of cleaning up your code. Select some code, press ctrl + i (on Windows) or ⌘ + i (on macOS), and R will reformat the code for you. It\u0026rsquo;s not always perfect, but it\u0026rsquo;s really helpful for getting indentation right without having to manually hit space a billion times.\nMain style things to pay attention to for this class  Important note: I won\u0026rsquo;t ever grade you on any of this! If you submit something like filter(mpg,cty\u0026gt;10,class==\u0026quot;compact\u0026quot;), I might recommend adding spaces, but it won\u0026rsquo;t affect your grade or points or anything.\n Spacing  See the \u0026ldquo;Spacing\u0026rdquo; section in the tidyverse style guide.\n Put spaces after commas (like in regular English):\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter(mpg , cty \u0026gt; 10) filter(mpg ,cty \u0026gt; 10) filter(mpg,cty \u0026gt; 10) Put spaces around operators like +, -, \u0026gt;, =, etc.:\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter(mpg, cty\u0026gt;10) filter(mpg, cty\u0026gt; 10) filter(mpg, cty \u0026gt;10) Don\u0026rsquo;t put spaces around parentheses that are parts of functions:\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter (mpg, cty \u0026gt; 10) filter ( mpg, cty \u0026gt; 10) filter( mpg, cty \u0026gt; 10 ) Long lines  See the \u0026ldquo;Long lines\u0026rdquo; section in the tidyverse style guide.\n It\u0026rsquo;s generally good practice to not have really long lines of code. A good suggestion is to keep lines at a maximum of 80 characters. Instead of counting characters by hand (ew), in RStudio go to \u0026ldquo;Tools\u0026rdquo; \u0026gt; \u0026ldquo;Global Options\u0026rdquo; \u0026gt; \u0026ldquo;Code\u0026rdquo; \u0026gt; \u0026ldquo;Display\u0026rdquo; and check the box for \u0026ldquo;Show margin\u0026rdquo;. You should now see a really thin line indicating 80 characters. Again, you can go beyond this—that\u0026rsquo;s fine. It\u0026rsquo;s just good practice to avoid going too far past it.\nYou can add line breaks inside longer lines of code. Line breaks should come after commas, and things like function arguments should align within the function:\n# Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Bad filter(mpg, cty \u0026gt; 10, class %in% c(\u0026#34;compact\u0026#34;, \u0026#34;pickup\u0026#34;, \u0026#34;midsize\u0026#34;, \u0026#34;subcompact\u0026#34;, \u0026#34;suv\u0026#34;, \u0026#34;2seater\u0026#34;, \u0026#34;minivan\u0026#34;)) # Good filter(mpg, cty \u0026gt; 10, class %in% c(\u0026#34;compact\u0026#34;, \u0026#34;pickup\u0026#34;, \u0026#34;midsize\u0026#34;, \u0026#34;subcompact\u0026#34;, \u0026#34;suv\u0026#34;, \u0026#34;2seater\u0026#34;, \u0026#34;minivan\u0026#34;)) Pipes (%\u0026gt;%) and ggplot layers (+) Put each layer of a ggplot plot on separate lines, with the + at the end of the line, indented with two spaces:\n# Good ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Bad ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Super bad ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Super bad and won\u0026#39;t even work ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() Put each step in a dplyr pipeline on separate lines, with the %\u0026gt;% at the end of the line, indented with two spaces:\n# Good mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Bad mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Super bad mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Super bad and won\u0026#39;t even work mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) Comments  See the \u0026ldquo;Comments\u0026rdquo; section in the tidyverse style guide.\n Comments should start with a comment symbol and a single space: # \n# Good #Bad #Bad If the comment is really short (and won\u0026rsquo;t cause you to go over 80 characters in the line), you can include it in the same line as the code, separated by at least two spaces (it works with one space, but using a couple can enhance readability):\nmpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% # Only rows where cty is 10 + group_by(class) %\u0026gt;% # Divide into class groups summarize(avg_hwy = mean(hwy)) # Find the average hwy in each group You can add extra spaces to get inline comments to align, if you want:\nmpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% # Only rows where cty is 10 + group_by(class) %\u0026gt;% # Divide into class groups summarize(avg_hwy = mean(hwy)) # Find the average hwy in each group If the comment is really long, you can break it into multiple lines. RStudio can do this for you if you go to \u0026ldquo;Code\u0026rdquo; \u0026gt; \u0026ldquo;Reflow comment\u0026rdquo;\n# Good # Happy families are all alike; every unhappy family is unhappy in its own way. # Everything was in confusion in the Oblonskys’ house. The wife had discovered # that the husband was carrying on an intrigue with a French girl, who had been # a governess in their family, and she had announced to her husband that she # could not go on living in the same house with him. This position of affairs # had now lasted three days, and not only the husband and wife themselves, but # all the members of their family and household, were painfully conscious of it. # Bad # Happy families are all alike; every unhappy family is unhappy in its own way. Everything was in confusion in the Oblonskys’ house. The wife had discovered that the husband was carrying on an intrigue with a French girl, who had been a governess in their family, and she had announced to her husband that she could not go on living in the same house with him. This position of affairs had now lasted three days, and not only the husband and wife themselves, but all the members of their family and household, were painfully conscious of it. Though, if you\u0026rsquo;re dealing with comments that are that long, consider putting the text in R Markdown instead and having it be actual prose.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"844aea7aa9e8c205f7e898c3972e5c8f","permalink":"https://cumulativescience.netlify.app/resource/style/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/style/","section":"resource","summary":"R style conventions R is fairly forgiving about how you type code (unlike other languages like Python, where miscounting spaces can ruin your code!). All of these things will do exactly the same thing:","tags":null,"title":"R style suggestions","type":"docs"},{"authors":null,"categories":null,"content":"  For the remaining portion of the semester, we will be working on your final projects – an original meta-analysis on a question in developmental, cognitive, or social psychology. You will complete your project in groups of ~4, and you will decide on your topic in consultation with me and your group members. The goal is that you could go on to publish your meta-analysis with a little more work beyond this class.\nThere are broadly five steps to conducting a meta-analysis:\nIdentify topic Conduct literature search Code studies and calculate effect sizes Plot and analyze data Report and discuss results.  You will conduct your meta-analysis as a group, but you will write-up your results in a final paper individually (each student must turn in their own final paper). In the following weeks, you will complete three more assignments (Assignments 6-8). Each assignment will involve completing one of the above steps for your meta-analysis. Assignment 6 will involve identifying a topic for your MA, Assignment 7 will involve conducting a literature search for your MA, and Assignment 8 will involve coding studies for your MA. Each of these three assignments will involve a written component that will become part of your final paper that you turn in at the end of the semester.\nWe will provide feedback to you for each assignment and you must incorporate this feedback in your final paper. After completing Assignments 6-8, you’ll almost have a complete paper – the only additional things you’ll need to add are plots and analyses of your data and a discussion of your results. Finally, you will share your final results in a presentation during the last week of class. Your presentation will be as a group.\nFinal Project Presentation Presentations will be December 2nd.\n Final Project Paper Use the R markdown template to writeup your project. The template allows you to write your final paper and include your R code and output in a single document, making your report highly reproducible. Your final paper is due December 12th (5pm).  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"906948c0c20269343f8a141b0c2c75c2","permalink":"https://cumulativescience.netlify.app/finalproject/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/finalproject/","section":"","summary":"For the remaining portion of the semester, we will be working on your final projects – an original meta-analysis on a question in developmental, cognitive, or social psychology. You will complete your project in groups of ~4, and you will decide on your topic in consultation with me and your group members.","tags":null,"title":"Meta-Analysis Final Project","type":"page"},{"authors":null,"categories":null,"content":"  [link] Bryan (2019) Chapter 6: Introduction to dplyr.\nTest\nBryan, J. (2019). Data wrangling, exploration, and analysis with r (stat 545).   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"93a5a7f48c0357e79adb2d42f136d9f1","permalink":"https://cumulativescience.netlify.app/reading/01a-reading/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/reading/01a-reading/","section":"reading","summary":"  [link] Bryan (2019) Chapter 6: Introduction to dplyr.\nTest\nBryan, J. (2019). Data wrangling, exploration, and analysis with r (stat 545).   ","tags":null,"title":"Readings","type":"reading"},{"authors":null,"categories":null,"content":"  Here’s the roadmap for the semester.\n  Readings should be completed before each class session    Slides and other class materials will be added on the day of class    Assignments are due at noon on the day they are due (unless otherwise stated)      The Process of Cumulative Science Reading Slides Assignment Notes   Week 1 [M, 8/30] Introduction to the course    Welcome!   [W] The scientific process as cumulative       [F] Lab: Getting started with R     Skills: Rstudio cloud, basic operations in R, loading packages    The Single Experiment Reading Slides Assignment Notes   Week 2 [M, 9/6] No Class (Labor Day)       [W] Experimental data    Skills: quantitative/qualitative variables   [F] Lab: Intro to dplyr     Skills: pipe operator, filter, select, arrange   Week 3 [M, 9/13] Summarizing data    [Quiz 1]; Skills: tidy data, mutate, group_by, summarize   [W] Visualization: Intro to grammar of graphics    Skills: ggplot   [TH]  A1 Due       [F] Lab: Working with ggplot        Week 4 [M, 9/20] Visualization: Principles of data visualization    [Quiz 2]   [W] The rest of the tidyverse       [TH]  A2 Due       [F] Lab: More tidyverse        Week 5 [M, 9/27] Reproducibility (and the failures)    [Quiz 3]   [W] Reproducible workflows       [TH]  A3 Due       [F] Lab: Reproducible workflows (OSF/Github)         Repeating an Experiment Reading Slides Assignment Notes   Week 6 [M, 10/4] Statistical Foundations: Sampling    [Quiz 4]; Skills: sampling, distributions, variance   [W] Statistical Foundations: Estimating population values    Skills: Normal Distribution; Confidence intervals   [TH]  A4 Due       [F] Lab: Confidence intervals     Skills: data wrangling   Week 7 [M, 10/11] Statistical Foundations: Effect Sizes    [Quiz 5]; Skills: p-values   [W] Replications (and the failures)    Skills: Cohen d   [TH]  A5 Due       [F] Lab: Midterm Review        Week 8 [M, 10/18] Replication (and the failures)    [no quiz]   [W] Pre-registration and other replication solutions       [TH]  MIDTERM DUE       [F] Lab: How to read a psychological empirical paper         Aggregating Many Experiments Reading Slides Assignment Notes   Week 9 [M, 10/25] Intro to meta-analysis (MA)    [Quiz 6]   [W] Choosing a MA topic       [F] Lab: Choosing a MA topic        Week 10 [M, 11/1] Literature search    [Quiz 7]   [W] Coding studies for MA       [TH]  A6 Due [Topic proposal]       [F] No Class (day for community engagement)        Week 11 [M, 11/8] Calculating ES    [Quiz 8]   [W] MA plots       [TH]  A7 Due [Literature search]       [F] Lab: Intro to metafor        Week 12 [M, 11/15] Funnel plots    [Quiz 9]   [W] Presenting data       [TH]  A8 Due       [F] Lab: practicum        Week 13 [M, 11/22] Project Group Meetings    [Quiz 10]   [W] No Class (Thanksgiving)       [F] No Class (Thanksgiving)       Week 14 [M, 11/29] Other big data in psychological research       [W] Wrap-up       [TH, 12/2, 4:30 - 6:00PM] Psychology Research Methods Poster Sesssion       [F] No Class        [TH, 12/9]  FINAL PROJECT WRITEUP DUE (noon)        This is a tentative schedule, and details may change as the semester progresses.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3e223d7ba58b0122b42458e4cf52e04c","permalink":"https://cumulativescience.netlify.app/schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/schedule/","section":"","summary":"Here’s the roadmap for the semester.\n  Readings should be completed before each class session    Slides and other class materials will be added on the day of class    Assignments are due at noon on the day they are due (unless otherwise stated)      The Process of Cumulative Science Reading Slides Assignment Notes   Week 1 [M, 8/30] Introduction to the course    Welcome!","tags":null,"title":"Schedule","type":"page"},{"authors":null,"categories":null,"content":"   Course Objectives Course Overview Course materials Requirements Policies  Classroom Expectations related to COVID-19 Participation Laptops Late Work Take care of yourself Accommodations for Students with Disabilities Respect in the Classroom Cheating and Plagiarism  Assignments and grades  Attendance and Participation Weekly quizzes Assignments Midterm Exam Final project Assignment Grades    Course details  MW (lecture); F (lab)  1:25-2:15pm  Mellon Institute 448   Instructor  Dr. Molly Lewis  mollylewis@cmu.edu  Porter Hall 208H  [Zoom office]  Office Hours:\nW 3:00-5:00pm   TA  Roderick Seow  yseow@andrew.cmu.edu  TBD (email)  [Zoom office]  Office Hours:\nM 3:30-5:30pm    Course Objectives The course has two related goals: (1) Provide a theoretical understanding of the scientific process and the role of cumulative science, and (2) introduce you to a set of modern tools for conducting science in this framework. Specifically, you’ll be able to:\n Understand the role of replicability and reproducibility for cumulative psychological science Understand the principles of “the new statistics” (i.e., confidence intervals, effect sizes; Cumming, 2014) Conduct a basic meta-analysis Use R/RStudio and the tidyverse framework (Wickham, 2017) for conducting basic data analysis Present visualizations of data using Grammar of Graphics principles (Wickham, 2010)  In addition, the course will introduce you to a range of other tools (Github, Rpubs, Open Science Framework, metafor) that are useful in psychological research.\n Course Overview The course is organized into four units. The first unit will introduce the process of cumulative science and the main themes of the course. The second unit will focus on tools for conducting a single experiment. In this unit, we’ll learn tools for analyzing and visualizing data within the tidyverse (Wickham, 2017) framework. We’ll also learn tools for creating a reproducible workflow in experimental research. In the third unit, we’ll introduce the concept of replication and related statistical concepts. Finally, the fourth unit will focus on a quantitative approach to synthesizing the results of many experiments: meta-analysis. The basic principles of meta-analysis will be introduced, and students will conduct an original meta-analysis as a final project.\n Course materials The readings in this class are free and will be provided on the course website. There is no book for the course.\nThe course will make heavy use of R and RStudio. R is the programming software and RStudio is the dashboard (IDE). Both of these are open source and freely available. You’ll need to install both of these on your computer. If you’re having trouble with this, please reach out to either the TA or myself. This software is already installed on most CMU lab computers.\n Requirements This course assumes no prior programming experience, but does require a willingness to learn and be challenged. Prior familiarity with any programming language (e.g. R, Python, Matlab), however, will be helpful in the course.\n Policies Classroom Expectations related to COVID-19 The goal is to create an environment for learning that will also keep everyone as safe as possible. Therefore, in order to attend class meetings, I expect all students to abide by all behaviors indicated in A Tartan’s Responsibility, including any timely updates based on the current conditions. In particular, I expect students to wear a facial covering throughout class when there is a requirement in effect on campus (the requirement is in effect at the start of the Fall 2021 semester).\n Participation Learning a new “language” (in this case, R) and the other skills in this course require hands-on involvement, and you will get the most out this class if you actively engage in the material. Students are therefore expected to complete readings and participate in class. Lecture slides will be posted after class each day, but reading these slides is only a partial substitute for class attendance.\n Laptops You will need to bring a laptop to class for Monday quizzes and Friday labs. If this is a problem, please let me know. To facilitate learning for everyone, the expectation is that laptops will not be not be used in lecture outside of quizzes.\n Late Work Late work policy for the assignments, midterm, and final:\n next day: lose 25% of total possible points later than next day: lose all points  Your lowest assignment score will be dropped. Late work policy for the final project: 10% off for each day late.\n Take care of yourself The pandemic has introduced a lot of stress and uncertainty for everyone over the last year and a half. Make sure to take care of yourself this semester. Move regularly, eat well, and reach out to your support system or me if you need to. We can all benefit from support in times of stress, and that is especially true this semester.\nAs a student, you may experience a range of challenges that can interfere with learning, such as strained relationships, increased anxiety, substance use, feeling down, difficulty concentrating and/or lack of motivation. These mental health concerns or stressful events (like a global pandemic!) may diminish your academic performance and/or reduce your ability to participate in daily activities. It is important to take care of yourself by seeking help, just as you would for any physical health issue CMU services are available, and treatment does work. You can learn more about confidential mental health services available on campus at: http://www.cmu.edu/counseling/. Support is always available (24/7) from Counseling and Psychological Services: 412-268-2922.\nIf you are worried about affording food or feeling insecure about food, there are resources on campus who can help. Email the CMU Food Pantry Coordinator to schedule an appointment or call 412-268-8704 (SLICE office).\n Accommodations for Students with Disabilities If you have a disability and have an accommodations letter from the Disability Resources office, I encourage you to discuss your accommodations and needs with me as early in the semester as possible. I will work with you to ensure that accommodations are provided as appropriate. If you suspect that you may have a disability and would benefit from accommodations but are not yet registered with the Office of Disability Resources, I encourage you to contact them at access@andrew.cmu.edu.\n Respect in the Classroom It is my intent that students from all diverse backgrounds and perspectives be well served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that students bring to this class be viewed as a resource, strength and benefit. It is my intent to present materials and activities that are respectful of diversity: gender, sexuality, disability, age, socioeconomic status, ethnicity, race, and culture. Your suggestions are encouraged and appreciated. Please let me know ways to improve the effectiveness of the course for you personally or for other students or student groups. In addition, if any of our class meetings conflict with your religious events, please let me know so that we can make arrangements for you.\n Cheating and Plagiarism Cheating and plagiarism are defined in the CMU Student Handbook, and include (1) submitting work that is not your own for assignments or exams; (2) copying ideas, words, or graphics from a published or unpublished source without appropriate citation; (3) submitting or using falsified data; and (4) submitting the same work for credit in two courses without prior consent of both instructors. Any student who is found cheating or plagiarizing on any work for this course will receive a failing grade for that work. Further action may be taken if necessary, including a report to the dean.\n  Assignments and grades Attendance and Participation Attendance and participation (e.g., asking and answering questions) in lecture and lab are expected. To account for this, a portion of your final grade is based on your active participation. Your active participation in lecture and lab can earn you up to 20 points in your final grade.\n Weekly quizzes Most Mondays there will be a short 5 minute quiz at the beginning of class. These quizzes will cover the material from the previous two lectures (Monday and Wednesday lectures from the previous week). The goal of these quizzes is to give both you and I a sense of your understanding of the material.\n Assignments There will be eight assignments throughout the semester. The goal of these assignments is to give you hands-on experience with the skills that are introduced in lecture and in lab. You are welcomed, and encouraged, to work with each other on the problems. But, you must turn in your own work.\n Midterm Exam There will be a take-home midterm exam that will assess your conceptual understanding of the topics covered in the first part of the semester through short answer responses and R code. It will be similar in spirit to Assignments 1-5, but unlike the assignments, you will be expected to complete the exam completely on your own.\n Final project The final project will be an original meta-analysis on a topic in cognitive, developmental or social psychology. You are encouraged to work on the project in groups of 3-5; however, each student must complete their own final write-up. Scope and topics of the meta-analysis will be decided in consultation with me.\nThere is no final exam. This project is your final exam.\n Assignment Grades    Assignment Percent Points    Participation 5.7% 20  Quizzes (5 x 10) 14.3% 50  Lab Assignments (20 x 8) 45.7% 160  Midterm 14.3% 50  Final Meta-analysis Project [Presentation = 35; Writeup = 35] 20.0% 70  Total  350    \n   Grade Range    A 90–100%  B 80–89%  C 70-79%  D 60-69%      ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e4d5a4a79239f08c6ad0d7cbf1be756c","permalink":"https://cumulativescience.netlify.app/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/syllabus/","section":"","summary":"Course Objectives Course Overview Course materials Requirements Policies  Classroom Expectations related to COVID-19 Participation Laptops Late Work Take care of yourself Accommodations for Students with Disabilities Respect in the Classroom Cheating and Plagiarism  Assignments and grades  Attendance and Participation Weekly quizzes Assignments Midterm Exam Final project Assignment Grades    Course details  MW (lecture); F (lab)  1:25-2:15pm  Mellon Institute 448   Instructor  Dr.","tags":null,"title":"Syllabus","type":"page"}]